1. Методы класса String
 - Метод matches(String regex) - принимает регулярное выражение и возвращает true/false.
   boolean result = input.matches("(\\+*)\\d{11}");

 - Метод split(String regex) - для разделения строки на подстроки.
   String[] words = text.split("\\s*(\\s|,|!|\\.)\\s*");

------------------------------------------------------------------------------------------------------------------------

2. Класс Pattern. Пакет java.util.regex

Для простого поиска соответствий в классе Pattern определен статический метод
 - boolean matches(String pattern, CharSequence input).
Данный метод возвращает true, если последовательность символов input полностью соответствует шаблону строки pattern:

String input = "Hello";
boolean found = Pattern.matches("Hello", input);

Но, как правило, для поиска соответствий применяется другой способ - использование класса Matcher.

------------------------------------------------------------------------------------------------------------------------

3. Класс Matcher. Пакет java.util.regex

 - Метод matches(): возвращает true, если вся строка совпадает с шаблоном
 - Метод find(): возвращает true, если в строке есть подстрока, которая совпадает с шаблоном, и переходит к этой подстроке
 - Метод group(): возвращает подстроку, которая совпала с шаблоном в результате вызова метода find.
   Если совпадение отсутствует, то метод генерирует исключение IllegalStateException.
 - Метод start(): возвращает индекс текущего совпадения
 - Метод end(): возвращает индекс следующего совпадения после текущего
 - Метод replaceAll(String str): заменяет все найденные совпадения подстрокой str и возвращает измененную строку с учетом замен

1. Надо создать объект Pattern с помощью статического метода compile(String regex), который позволяет установить шаблон:

Pattern pattern = Pattern.compile("Hello");
Pattern pattern = Pattern.compile("\\s*(\\s|,|!|\\.)\\s*");

2. Надо создать объект Matcher с помощью метода matcher(String input), который в качестве параметра принимает строку,
   где надо проводить поиск, и возвращает объект Matcher:

Matcher matcher = pattern.matcher("Hello world! Hello Java!");

3. У объекта Matcher вызывается:
 - метод matches() для ПОЛНОГО СООТВЕТСТВИЯ:
   boolean found = matcher.matches();
 - метод matcher.find() для НЕ ПОЛНОГО СООТВЕТСТВИЯ
   while(matcher.find()) {
       System.out.println(matcher.group());
   }

------------------------------------------------------------------------------------------------------------------------