Классы DataOutputStream и DataInputStream

Классы DataOutputStream и DataInputStream позволяют записывать и считывать данные примитивных типов.

------------------------------------------------------------------------------------------------------------------------

1. Запись данных и DataOutputStream

Класс DataOutputStream представляет поток вывода и предназначен для записи данных примитивных типов,
таких, как int, double и т.д.
 - Метод writeBoolean(boolean v) : записывает в поток булевое однобайтовое значение
 - Метод writeByte(int v): записывает в поток 1 байт, которые представлен в виде целочисленного значения
 - Метод writeChar(int v): записывает 2-байтовое значение char
 - Метод writeDouble(double v): записывает в поток 8-байтовое значение double
 - Метод writeFloat(float v): записывает в поток 4-байтовое значение float
 - Метод writeInt(int v): записывает в поток целочисленное значение int
 - Метод writeLong(long v): записывает в поток значение long
 - Метод writeShort(int v): записывает в поток значение short
 - Метод writeUTF(String str): записывает в поток строку в кодировке UTF-8

------------------------------------------------------------------------------------------------------------------------

2. Считывание данных и DataInputStream

Класс DataInputStream действует противоположным образом - он считывает из потока данные примитивных типов.
 - Метод readBoolean(): считывает из потока булевое однобайтовое значение
 - Метод readByte(): считывает из потока 1 байт
 - Метод readChar(): считывает из потока значение char
 - Метод readDouble(): считывает из потока 8-байтовое значение double
 - Метод readFloat(): считывает из потока 4-байтовое значение float
 - Метод readInt(): считывает из потока целочисленное значение int
 - Метод readLong(): считывает из потока значение long
 - Метод readShort(): считывает значение short
 - Метод readUTF(): считывает из потока строку в кодировке UTF-8
 - Метод skipBytes(int n): пропускает при чтении из потока n байтов

------------------------------------------------------------------------------------------------------------------------

Person tom = new Person("Tom", 34, 1.68, false);

// запись в файл
try (DataOutputStream dos = new DataOutputStream(new FileOutputStream("data.bin"))) {
    // записываем значения
    dos.writeUTF(tom.name);
    dos.writeInt(tom.age);
    dos.writeDouble(tom.height);
    dos.writeBoolean(tom.married);
    System.out.println("File has been written");
} catch(IOException ex) {
    System.out.println(ex.getMessage());
}

// обратное считывание из файла
try (DataInputStream dis = new DataInputStream(new FileInputStream("data.bin"))) {
    // записываем значения
    String name = dis.readUTF();
    int age = dis.readInt();
    double height = dis.readDouble();
    boolean married = dis.readBoolean();
    System.out.printf("Name: %s  Age: %d  Height: %f  Married: %b", name, age, height, married);
} catch(IOException ex) {
    System.out.println(ex.getMessage());
}

Здесь мы последовательно записываем в файл данные объекта Person.
Объект DataOutputStream в конструкторе принимает поток вывода: DataOutputStream (OutputStream out).
В данном случае в качестве потока вывода используется объект FileOutputStream, поэтому вывод будет происходить в файл.
И с помощью выше рассмотренных методов типа writeUTF() производится запись значений в бинарный файл.
Затем происходит чтение ранее записанных данных. Объект DataInputStream в конструкторе принимает поток для чтения:
DataInputStream(InputStream in). Здесь таким потоком выступает объект FileInputStream

------------------------------------------------------------------------------------------------------------------------
